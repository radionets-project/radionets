name: CI

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request:

env:
  MPLBACKEND: Agg
  PYTEST_ADDOPTS: --color=yes
  GITHUB_PR_NUMBER: ${{ github.event.number }}

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "3.9"
            install-method: mamba

          - os: ubuntu-latest
            python-version: "3.10"
            install-method: mamba
            extra-args: ["codecov"]

    defaults:
      run:
        # We need login shells (-l) for micromamba to work.
        shell: bash -leo pipefail {0}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Prepare mamba installation
        if: matrix.install-method == 'mamba'
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
        run: |
          # setup correct python version
          sed -i -e "s/- python=.*/- python=$PYTHON_VERSION/g" environment.yml

      - name: mamba setup
        if: matrix.install-method == 'mamba'
        uses: mamba-org/provision-with-micromamba@v14

      - name: Python setup
        if: matrix.install-method == 'pip'
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true

      - name: Install dependencies
        run: |
          python --version
          pip install pytest-cov restructuredtext-lint pytest-xdist 'coverage!=6.3.0'
          pip install .[all]
          pip freeze

      - name: List installed package versions (conda)
        if: matrix.environment-type == 'mamba'
        run: micromamba list

      - name: Tests
        run: |
          py.test --cov --cov-report=xml

      - uses: codecov/codecov-action@v3
        if: contains(matrix.extra-args, 'codecov')

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install doc dependencies
        run: |
          sudo apt update --yes && sudo apt install --yes git 
          pip install -U pip towncrier

      - name: Produce Changelog
        run: |
          towncrier build --yes --version==0.0.0

